import pandas as pdimport numpy as npimport kerasimport os from glob import  globfrom scipy import ndimage as ndimport torchfrom torch.utils.data import Dataset, DataLoaderimport torchvisionsignal_file_name="amygdala"imp_path=f"./resnet/{signal_file_name}"exp_path=f"./resnet_res/{signal_file_name}"os.makedirs(exp_path,exist_ok=True)datapath=glob(("./resnet/*.pt"))lbl_dict={"healthy":1,"unhealthy":0}df=pd.DataFrame(datapath,columns=["path"])df["label"]=df["path"].apply(lambda x :int(x[-4]))df["name"]=df["path"].apply(lambda x : x.rsplit("/")[-1].rsplit("_")[1])df["part"]=df["path"].apply(lambda x : int(x.rsplit("/")[-1].rsplit("_")[2][-1]))df=pd.DataFrame(df.groupby("name",as_index=False).agg(max))def read_save_file (name,Mx_part,lbl):    lst=[]    print(name,Mx_part,lbl)    for part in range(Mx_part+1):        img=torch.load(f"{imp_path}/signal_{name}_part{part}_{lbl}.pt")        lst.append(img)    lst=torch.vstack(lst)    scale=np.array([50,109,1000])/np.array(lst.shape)    lst=torch.tensor(lst,requires_grad=False)    lst=nd.interpolation.zoom(lst, zoom=scale)    torch.save(lst,f"{exp_path}/signal_{name}_{lbl}.pt")    return Truefor row in df[["name","part","label"]].values:    read_save_file (row[0],row[1],row[2])